name: 'Manual Release'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to create and release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-tag-and-release:
    name: 'Create Tag and Release'
    runs-on: ubuntu-latest
    permissions:
      contents: write

steps:
  - name: 'Checkout code'
    uses: actions/checkout@v4
    with:
      # Fetch all history so we can compare tags
      fetch-depth: 0

  - name: 'Create and push Git tag'
    # Securely pass the tag from the input to an environment variable
    env:
      RELEASE_TAG: ${{ github.event.inputs.tag }}
    run: |
      # Use the double-quoted env var to prevent command injection
      git tag "$RELEASE_TAG"
      git push origin "$RELEASE_TAG"

  - name: 'Generate changelog'
    id: changelog
    # Securely pass the tag to this step as well
    env:
      RELEASE_TAG: ${{ github.event.inputs.tag }}
    run: |
      # Get the previous tag, or the first commit if there is no previous tag
      PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)
      echo "Previous tag is: $PREVIOUS_TAG"
      
      # Use a heredoc to handle multiline strings for the output
      echo "changelog_body<<EOF" >> $GITHUB_OUTPUT
      echo "## Changes in this Release" >> $GITHUB_OUTPUT
      git log $PREVIOUS_TAG.."$RELEASE_TAG" --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
      echo "" >> $GITHUB_OUTPUT # Add a newline at the end
      echo "EOF" >> $GITHUB_OUTPUT

  - name: 'Create GitHub Release'
    uses: actions/create-release@v1
    with:
      tag_name: ${{ github.event.inputs.tag }}
      release_name: 'Release ${{ github.event.inputs.tag }}'
      body: ${{ steps.changelog.outputs.changelog_body }}
      draft: false
      prerelease: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
