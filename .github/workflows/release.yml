---
name: Release
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main

jobs:
  # Detect if a commit was made from a release PR with title like '[release v0.1.1] (#49)'
  release_or_pr:
    name: Release or Release PR?
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.release_or_pr.outputs.is_release }}
    steps:
      - id: release_or_pr
        run: |
          cat > /tmp/commit_message <<- EOF
          ${{ github.event.head_commit.message }}
          EOF
          cat /tmp/commit_message
          # https://regex101.com/r/1z85UX/1
          echo $(grep -Pq '^\[release v(?:[0-9]{1,3}\.?){3}(?:-rc(?:\.[0-9]{1,3})?)?\] \(#[0-9]{1,5}\)$' /tmp/commit_message && echo true || echo false) > /tmp/is_release
          echo "is_release=$(cat /tmp/is_release)" >> $GITHUB_OUTPUT

  release_pr_create:
    name: Release PR create
    needs: [release_or_pr]
    if: ${{ ! fromJson(needs.release_or_pr.outputs.is_release) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Prepare Release
        id: prepare_release
        uses: elastiflow/gha-reusable/actions/prepare-release@v0
        with:
          branch: "${{ github.ref_name }}"
          changelog_update: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pull Request
        if: ${{ fromJson(steps.prepare_release.outputs.new_release_published) }}
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: "${{ github.ref_name }}"
          branch: release-from-${{ github.ref_name }}
          title: '[release v${{ steps.prepare_release.outputs.new_release_version }}]'
          body: |
            # Description
            Release the v${{ steps.prepare_release.outputs.new_release_version }} version

            # Changelog
            ${{ steps.prepare_release.outputs.new_release_notes }}

  release:
    name: Release
    needs: [release_or_pr]
    if: ${{ fromJson(needs.release_or_pr.outputs.is_release) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Prepare Release
        id: prepare_release
        uses: elastiflow/gha-reusable/actions/prepare-release@v0
        with:
          branch: "${{ github.ref_name }}"
          changelog_update: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push semver tag
        if: ${{ fromJson(steps.prepare_release.outputs.new_release_published) }}
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: v${{ steps.prepare_release.outputs.new_release_version }}
      - name: Create GH release
        if: ${{ fromJson(steps.prepare_release.outputs.new_release_published) }}
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: v${{ steps.prepare_release.outputs.new_release_version }}
          body: ${{ steps.prepare_release.outputs.new_release_notes }}
          preserve_order: true
          make_latest: true
